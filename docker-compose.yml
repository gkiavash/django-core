version: '3.3'

services:
  # PostgreSQL
  db:
    container_name: db
    image: 'postgres:latest'
    hostname: db
    restart: unless-stopped
    env_file: src/.env
    volumes:
      - ./pgsql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 30s
      retries: 3

  # Redis
  redis:
    image: 'bitnami/redis:latest'
    hostname: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: [ "CMD-SHELL", "ls" ]
      interval: 5s
      timeout: 15s

  # Celery
  celery:
    image: 'gkiavash/django_core:0.0.1'
    restart: unless-stopped
    env_file: src/.env
    ports:
      - "5037:5037"
    volumes:
      - ./src:/usr/src/Core/
    depends_on:
      - app
      - redis
      - db
    command: celery -A Core worker -l info

  # Celery-beat
  celery_beat:
    image: 'gkiavash/django_core:0.0.1'
    restart: unless-stopped
    env_file: src/.env
    volumes:
      - ./src:/usr/src/Core/
    depends_on:
      - app
      - redis
      - db
    command: celery -A Core beat -l info

  # app
  app:
    image: 'gkiavash/django_core:0.0.1'
    build: ./src
    restart: unless-stopped
    env_file: src/.env
    expose:
      - 8000
    volumes:
      - ./src:/usr/src/Core/
      - static_volume:/usr/src/Core/static
    depends_on:
      - redis
      - db
    command: |
      /bin/bash -c "
        set -e
        chmod +x /usr/src/Core/wait_for_db.sh
        bash /usr/src/Core/wait_for_db.sh
        gunicorn Core.wsgi:application --bind 0.0.0.0:8000
      "

  # Nginx
  nginx:
    build: ./sys/nginx
    restart: unless-stopped
    env_file: src/.env
    ports:
      - 80:80
    volumes:
      - static_volume:/home/app/web/static
    depends_on:
      - app


  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

volumes:
  static_volume:
